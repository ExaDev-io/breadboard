{
  "title": "Open Alex Entity Search Results",
  "description": "Query the OpenAlex API for a list entities",
  "version": "0.0.1",
  "edges": [
    {
      "from": "fetch",
      "to": "spreadResponse",
      "out": "response",
      "in": "obj"
    },
    {
      "from": "input-0",
      "to": "urlTemplate",
      "out": "entity",
      "in": "entity"
    },
    {
      "from": "input-0",
      "to": "urlTemplate",
      "out": "page",
      "in": "page"
    },
    {
      "from": "input-0",
      "to": "urlTemplate",
      "out": "per_page",
      "in": "per_page"
    },
    {
      "from": "input-0",
      "to": "urlTemplate",
      "out": "search",
      "in": "search"
    },
    {
      "from": "input-0",
      "to": "urlTemplate",
      "out": "select",
      "in": "select"
    },
    {
      "from": "spreadResponse",
      "to": "output-0",
      "out": "spread",
      "in": "results"
    },
    {
      "from": "urlTemplate",
      "to": "fetch",
      "out": "url",
      "in": "url"
    }
  ],
  "nodes": [
    {
      "id": "input-0",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "entity": {
              "type": "string",
              "title": "Entity",
              "description": "Entity type to search for",
              "default": "works",
              "enum": [
                "works",
                "authors",
                "sources",
                "institutions",
                "topics",
                "publishers",
                "funders",
                "concepts"
              ]
            },
            "page": {
              "type": "string",
              "title": "Results per page",
              "description": "Number of results to return per page",
              "default": "5"
            },
            "per_page": {
              "type": "string",
              "title": "Results per page",
              "description": "Number of results to return per page",
              "default": "5"
            },
            "search": {
              "type": "string",
              "title": "Search term",
              "description": "Search term to search for, double quotes for exact match",
              "default": "Artificial Intelligence"
            },
            "select": {
              "type": "string",
              "title": "Select",
              "description": "Comma-separated list of fields to return",
              "default": "id,display_name,title,relevance_score"
            }
          },
          "required": []
        }
      }
    },
    {
      "id": "output-0",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "results": {
              "type": "object",
              "properties": {},
              "required": [],
              "additionalProperties": {
                "type": "string"
              },
              "title": "Entity Search Results",
              "description": "A list of entities from the search results "
            }
          },
          "required": [
            "results"
          ]
        }
      }
    },
    {
      "id": "fetch",
      "type": "fetch",
      "configuration": {
        "method": "GET"
      }
    },
    {
      "id": "spreadResponse",
      "type": "runJavascript",
      "configuration": {
        "code": "const spreadResponse = ({obj})=>{if(typeof obj!==\"object\"){throw new Error(`object is of type ${typeof obj} not object`)}const spread2={...obj};return{spread:spread2}};",
        "name": "spreadResponse",
        "raw": true
      },
      "metadata": {
        "title": "Spread",
        "description": "Spread the properties of an object into a new object"
      }
    },
    {
      "id": "urlTemplate",
      "type": "urlTemplate",
      "configuration": {
        "template": "https://api.openalex.org/{entity}?search={search}&page={page}&per_page={per_page}&select={select}"
      }
    }
  ]
}